{"title":"Daily snippet","created_at":"2014-06-28 00:50:00 UTC","author":"Ayush (PTZ/Serial Extension)","content":"<br /><ul><li>More github repository issues resolved and a few more added to the pile :D</li><li>Discussed PIC18 USB pin assignments: We shifted around pins to get access to hardware I2Cs, SPIs and UARTs in best possible way. All thanks to Tim and his spreadsheets!</li><li>While I was making the RS422 daughterboard I noted that the differences between RS422 and RS485 are not that trivial - RS422 have unidirectional lines and support simplex or full-duplex mode. RS485 can have a bidirectional line and is designed for multitap networks. So it can have simplex or half-duplex modes.&nbsp;<a href=\"http://www.ad-net.com.tw/index.php?id=62\">http://www.ad-net.com.tw/index.php?id=62</a></li><li>A really nice guide that differentiates between RS422 and RS485:&nbsp;<a href=\"http://www.diit.unict.it/users/scava/dispense/II/RS485.pdf\">http://www.diit.unict.it/users/scava/dispense/II/RS485.pdf</a></li><li>Figured out that flow control in RS422 and RS485 is not needed which is well explained here:&nbsp;<a href=\"http://en.wikibooks.org/wiki/Serial_Programming/RS-485#Handshaking\">http://en.wikibooks.org/wiki/Serial_Programming/RS-485#Handshaking</a>&nbsp;I like the way handshaking is explained in 2nd sentence.</li><li>There's RTS flow control which is used only if supported by software. And it doesn't hurt to provide <u>support</u> for RTS control in hardware by giving a jumper option.</li><li>Another way of flow control which is sometimes built into the converter hardware is called&nbsp;<i>Automatic Send Data Control</i>. In this method a controller within the converter enables the RS485 transmitters *as soon* as it sees data coming from UART TX and shuts off the transmitter so Hi-Z state after a *certain time* of inactivity. The terms \"as soon\" and \"certain time\" are critical here and are highly baud-rate dependent. This is baud-rate specific and hence application specific. This is also not a part of any of the EIA-4XX standard and it might be a marketing thing.</li><li>If the <i>Automatic Send Data Control</i>&nbsp;is needed and the software doesn't support&nbsp;RTS control we can force it in the FPGA or the PIC18F by manipulating RTS. Here's when board auto-detection can be useful.</li></ul><br /><br /><br /><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://ptzfortimvideos-gsoc14.blogspot.com/\">Serial port expansion for HDMI2USB with PTZ camera control example</a></i>\n  </span>\n</div>\n"}