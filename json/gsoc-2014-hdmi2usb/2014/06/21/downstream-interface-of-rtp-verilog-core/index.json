{"title":"Downstream interface of RTP Verilog core","created_at":"2014-06-21 02:16:00 UTC","author":"Tariq (Ethernet Support)","content":"Today, i wanted to finish downstream interface of the RTP Verilog core. See <a href=\"https://docs.google.com/document/d/1PSjfm6eS0B3UUPJmPf7PH0tNsF7ZFKIKfPldmF3ucKY/edit?pli=1\">Figure 6</a>&nbsp; of the Spec to see how the downstream interface looks like. The downstream block is the MAC (Media Access Controller). At the moment, the idea is to send RTP packets to the MAC. Once this is working, we can then insert UDP/IP/Ethernet headers and send it to the downstream interface as a realistic packet.<br /><br />I got the downstream interface working but it is lagging. What this means is that packet arrival is faster than packet departure. There are two ways to deal with this. One is to back-pressure the upstream interface until the packet is sent downstream. This means you cannot get new data from upstream interface until all the previous data has drained downstream. The other approach is to use a reasonably sized FIFO and let the arrived data fill up the FIFO. While new data arrives at the FIFO, downstream block consumes data from FIFO.<br /><br />Initially, i am going to try the first approach. Later, i can deal with the second approach.<br /><br />What i first encountered during synthesis was of course<br /><br /><span style=\"color: red;\"><b>Synthesis Errors !!!!</b></span><br /><br /><span style=\"color: red;\">ERROR:HDLCompiler:1401 - \"/home/user/gsoc14/python_code/myhdl_code/sim_models/rtp_xilinx/rtl/packetizer.v\" Line 148: Signal nxt_fifo_full in unit packetizer is connected to following multiple drivers:</span><br /><span style=\"color: red;\">Driver 0: output signal nxt_fifo_full of instance Latch (nxt_fifo_full).</span><br /><span style=\"color: red;\">Driver 1: output signal nxt_fifo_full of instance Multiplexer (fifo_full_fifo_full_MUX_20689).</span><br /><span style=\"color: red;\">ERROR:HDLCompiler:1401 - \"/home/user/gsoc14/python_code/myhdl_code/sim_models/rtp_xilinx/rtl/packetizer.v\" Line 220: Signal nxt_send_buffer[10399] in unit packetizer is connected to following multiple drivers:</span><br /><span style=\"color: red;\"><br /></span>So i had to rewrite RTL to make these Errors go away. I was able to do rewrite RTL as well as synthesize correctly. Here is the synthesis <a href=\"https://bitbucket.org/tariq786/myhdl_projs/src/46fade6c2eb1e1fae6b3a57097a9658d83c3617d/sim_models/rtp_xilinx/packetizer.syr?at=master\">log file</a>. Here is the synthesized <a href=\"https://bitbucket.org/tariq786/myhdl_projs/src/46fade6c2eb1e1fae6b3a57097a9658d83c3617d/sim_models/rtp_xilinx/postsyn/?at=master\">netlist </a>and <a href=\"https://bitbucket.org/tariq786/myhdl_projs/src/46fade6c2eb1e1fae6b3a57097a9658d83c3617d/sim_models/rtp_xilinx/postsyn/tb_packetizer.v?at=master\">testbench</a><br /><br />Please run the <a href=\"https://bitbucket.org/tariq786/myhdl_projs/src/46fade6c2eb1e1fae6b3a57097a9658d83c3617d/sim_models/?at=master\">code</a> and help me find bugs that you come across.<br /><br />Here is the output for a few clock cycles. The format is timestamp : 4bytes of RTP Data<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4356:80180000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4376:00000000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4416:00000501<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4436:001a0000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4456:00010000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4476:02000003<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4496:00000400<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4516:00050000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4536:06000007<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4556:00000800<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4576:00090000<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4596:0a00000b<br /><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.</div><div><br /></div><div>I will do more testing next week.</div><br /><br /><br /><div><br /></div><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://hdmi2ethernet.blogspot.com/\">GSOC 2014</a></i>\n  </span>\n</div>\n"}