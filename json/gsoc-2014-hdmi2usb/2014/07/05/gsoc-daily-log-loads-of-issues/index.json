{"title":"[GSoC Daily Log]: Loads of issues","created_at":"2014-07-05 18:00:00 UTC","author":"Rohit (VGA Extension)","content":"<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"><div dir=\"ltr\" id=\"docs-internal-guid-ea2c611e-093d-38bf-027c-46b38cc49dde\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">Saturday, 5th July 2014:</span></div><div dir=\"ltr\" id=\"docs-internal-guid-ea2c611e-093d-38bf-027c-46b38cc49dde\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><br /></div><ul style=\"margin-bottom: 0pt; margin-top: 0pt;\"><li dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">Loads of issues today: While integrating the i2c-initialization hdl code into my vga capture test code, I experienced another problem. The i2c program in i2c-initialization hdl code when synthesized and implemented standalone is inferred as distributed RAM and is working perfectly. I have pushed the code here(</span><a href=\"https://github.com/rohit91/HDMI_Test_v06/blob/master/hdl/i2c/i2c_top.vhd\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">https://github.com/rohit91/HDMI_Test_v06/blob/master/hdl/i2c/i2c_top.vhd</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">) But when I integrate the exact same code into my vga capture test code (modified one also pushed </span><a href=\"https://github.com/rohit91/HDMI_Test_v06/blob/master/hdl/vtc_demo.vhd\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">here</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">, the i2c instance is at the bottom), then the program code which is constant is inferred as BRAM8 instead of distributed one in standalone testing, with the bitgen issuing warning “PhysDesignRules:2410 - This design is using one or more 9K Block RAMs (RAMB8BWER). &nbsp;9K Block RAM initialization data, both user defined and default, may be incorrect and should not be used. &nbsp;For more information, please reference Xilinx Answer Record 39999.” I looked up this issue here: </span><a href=\"http://www.xilinx.com/support/answers/39999.html\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">http://www.xilinx.com/support/answers/39999.html</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\"> Tried its fixes, but still it won’t work! :/ I guess I’ll have to either use BRAM generator or change the code slightly. Still one more issue at hand, which I had thought to be completely done (see prev. blog post)</span></div></li><li dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">While browsing the HDMI2USB code which I had modified while integrating the vga capture code , I found that I had left the clock multiplexer for VGA pixel clock commented. Jahanzeb had added the VGA Pixel clock’s multiplexer named &nbsp;BUFGMUX_VGATP. It is a BUFGMUX resource, for multiplexing clocks. And I had left this commented. </span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: italic; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">That meant when during testing of integrated code, when I pressed the Atlys Right Button (selecting VGA source), the code would select all the signals (rgb, de, hsync, vsync, resx and resy) but the pixel clock would still be of Test Image! :-o </span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">This was simple but horrible mistake. I quickly uncommented the code and started its synthesis and implementation, eager to test the result and hoping better results this time. But, there was another bummer for me. The adding another </span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\"><span id=\"docs-internal-guid-ea2c611e-093f-58c9-25fb-8d4afb7e95ac\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">BUFGMUX</span> resulted in code becoming completely unroutable! uhh! </span></div></li></ul><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-left: 36pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\"><br class=\"kix-line-break\" /></span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">This was the error given by map: </span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\"><br class=\"kix-line-break\" /></span><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">“ERROR:Place:1320 - Unroutable Placement! A BUFGMUX cascade pair is not placed at a routable site. The driver BUFGMUX component img_sel_comp/BUFGMUX_VGATP&gt; is placed at site &lt;BUFGMUX_X2Y10&gt;. The load BUFGMUX component &lt;img_sel_comp/BUFGMUX_PCLK&gt; is placed at site &lt;BUFGMUX_X3Y13&gt;. The driver BUFGMUX must be in TOP half of the chip to be able to route to the load BUFGMUX. This placement is UNROUTABLE in PAR and therefore, this error &nbsp;condition should be fixed in your design. You may use the CLOCK_DEDICATED_ROUTE constraint in the .ucf file to demote this message to a WARNING in order to generate an NCD file. This NCD file can then be used in FPGA Editor to debug the problem. A list of all the COMP.PINS used in this clock placement rule is listed below. These examples can be used directly in the .ucf file to demote this ERROR to a WARNING. &lt; PIN \"img_sel_comp/BUFGMUX_VGATP.O\" CLOCK_DEDICATED_ROUTE = FALSE; &gt;”</span></div><br /><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-left: 36pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">I tried all 16 possible BUFGMUX locations, one worked(BUFGMUX_X3Y8) but after adding the constraint “NET \"DATACK\" CLOCK_DEDICATED_ROUTE = FALSE;”. Lets see if this works good.</span></div></div><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://dreamsxtrinsic.blogspot.com/\">Dreams eXtrinsic</a></i>\n  </span>\n</div>\n"}