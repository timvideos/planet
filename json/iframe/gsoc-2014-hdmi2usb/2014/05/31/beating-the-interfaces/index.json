{"title":"Beating the Interfaces","created_at":"2014-05-31 17:50:00 UTC","author":"Tariq (Ethernet Support)","content":"I read and heard a lot about interface incompatibilities and how different understanding of an interface could cause misunderstanding between teams working together. I ran into the same issue. To fix this, and understand the top level interfaces of HDMI2USB, i ran FPGA synthesis on it so i can view the RTL schematic. Here is a snapshot of schematic successful synthesis.<br /><br /><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-I7yVkRbUtRA/U4oRvQYCdDI/AAAAAAAAAHM/5czi06SuU6U/s1600/top_level_HDMI2USB.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://4.bp.blogspot.com/-I7yVkRbUtRA/U4oRvQYCdDI/AAAAAAAAAHM/5czi06SuU6U/s1600/top_level_HDMI2USB.jpg\" height=\"320\" width=\"318\" /></a></div><br /><div style=\"text-align: center;\">Figure 1: HDMI2USB at the top level</div><br />Once you have this schematic, you can click on wires and blocks to see which is connected with which.<br /><br />My goal was to determine the interface of <a href=\"https://bitbucket.org/tariq786/hdmi2usb/src/eaee2d1466ce118b5fe907b21b26352afb1c2e87/hdl/misc/image_buffer.vhd?at=master\">Image Buffer</a>&nbsp;to RTP Packetizer (it is still under development). After spending sometime and bouncing back and forth with mentor, i was able to understand it. The interface looks like following<br /><br /><span id=\"docs-internal-guid-b94002cf-5359-be3d-6405-44897b12cc47\"><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><img height=\"148px;\" src=\"https://docs.google.com/drawings/d/sljplwrNdUM7m3VJ2c2h29g/image?w=595&amp;h=148&amp;rev=612&amp;ac=1\" style=\"-webkit-transform: rotate(0.00rad); border: none; transform: rotate(0.00rad);\" width=\"595px;\" /></span></span><br /><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><br /><div style=\"text-align: center;\">Figure 2 : RTP Interface with upstream Image Buffer (Red arrow shows Flow Control signals)</div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">Here is a text and graphical snapshot of the simulation of the Image Buffer. The text shows 4 writes into the FIFO using Bus in (while reads are blocked on Bus out) and then the 4 writes are read &nbsp;on Bus out while blocking writes on Bus in.</div><div style=\"text-align: left;\"><br />#Simulation time [w=write operation] --&gt; write address , &nbsp;read address | input: enable status, fifo_full status bytes value , output: enable status, fifo_full status read value<br />#Simulation time [r=read operation] --&gt; read address , &nbsp;write address | input: enable status, fifo_full status bytes value , output: enable status, fifo_full status read value<br /><div><br /></div>33: &nbsp;[w] &nbsp;--&gt; &nbsp; 0, &nbsp; &nbsp;0 --&gt; | i:e1 f0 DE99C9, o:e0 f1 000000</div><div style=\"text-align: left;\"><div>39: &nbsp;[w] &nbsp;--&gt; &nbsp; 1, &nbsp; &nbsp;0 --&gt; | i:e1 f0 E95B32, o:e1 f1 000000</div><div>45: &nbsp;[w] &nbsp;--&gt; &nbsp; 2, &nbsp; &nbsp;0 --&gt; | i:e1 f0 0D2F9F, o:e1 f1 000000</div><div>51: &nbsp;[w] &nbsp;--&gt; &nbsp; 3, &nbsp; &nbsp;0 --&gt; | i:e1 f0 6B6951, o:e1 f1 000000</div><div>57: &nbsp;[w] &nbsp;--&gt; &nbsp; 4, &nbsp; &nbsp;0 --&gt; | i:e1 f0 549BB1, o:e1 f1 000000</div><div>63: &nbsp;[r] &nbsp;--&gt; &nbsp; 0, &nbsp; &nbsp;5 --&gt; | i:e0 f0 549BB1, o:e1 f0 000000</div><div>69: &nbsp;[r] &nbsp;--&gt; &nbsp; 1, &nbsp; &nbsp;5 --&gt; | i:e0 f0 549BB1, o:e1 f0 DE99C9</div><div>75: &nbsp;[r] &nbsp;--&gt; &nbsp; 2, &nbsp; &nbsp;5 --&gt; | i:e0 f0 549BB1, o:e1 f0 E95B32</div><div>81: &nbsp;[r] &nbsp;--&gt; &nbsp; 3, &nbsp; &nbsp;5 --&gt; | i:e0 f0 549BB1, o:e1 f0 0D2F9F</div><div><br /></div><div>If the above looks gibberish to you, you can look at the waveform below or read the <a href=\"http://bit.ly/1nPSHqQ\">source code</a></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://2.bp.blogspot.com/-5uKO8FyjEig/U4oU9pLH5sI/AAAAAAAAAHU/5Wmy2WJ8iWE/s1600/fifo_write_then_read_waveform.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http://2.bp.blogspot.com/-5uKO8FyjEig/U4oU9pLH5sI/AAAAAAAAAHU/5Wmy2WJ8iWE/s1600/fifo_write_then_read_waveform.jpg\" height=\"78\" width=\"320\" /></a></div><div><br /></div><div><div style=\"text-align: center;\">Figure 3: Waveform of FIFO WRITE and then READ operations</div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: left;\">Also added basic RTP packet processing functionality in the&nbsp;<a href=\"http://bit.ly/1nPSHqQ\">source code</a>&nbsp;to receive raw data from Image Buffer and turn it into RTP packets.</div></div></div><br /><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><br /><div style=\"text-align: center;\"><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></div><div style=\"text-align: center;\"><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></div><div style=\"text-align: center;\"><span style=\"font-family: Arial; font-size: 15px; vertical-align: baseline; white-space: pre-wrap;\"><br /></span></div><br /><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://hdmi2ethernet.blogspot.com/\">GSOC 2014</a></i>\n  </span>\n</div>\n"}