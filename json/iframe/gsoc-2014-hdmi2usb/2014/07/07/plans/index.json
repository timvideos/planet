{"title":"Plans","created_at":"2014-07-07 05:19:00 UTC","author":"Ajit (MJPEG Optimisation)","content":"<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"><div><div>I would like to make hdmi2usb usable for 720p atleast.&nbsp; Since we have already achieved 30 fps, things are looking good. Now the next thing to work on is finding an optimum encoding quality so that the encoded frame fit the fx2 bandwidth and are viewable.<br /><br />Tariq observed that we are clocking pixels which do not have useful data. I would like to check that too. It most probably will not affect the frame rate but it might effect things at higher resolution.<br /><br />How did fps improve to 30 fps?<br />In the original read/write state machine of DDR, read and writes did not happen simultaneously. I modified the read and write state machine to start encoding as soon as 8 lines are read into the DDR. This allows encoding of every alternate frame and hence fps of 30. In case Shenki you want to test it on your system, then here is the <a href=\"https://drive.google.com/file/d/0B0zz3gJ27U-VSlUtT19xbDBKLWM/edit?usp=sharing\">xsvf file</a>.<br /><br />How things can be improved further?<br /><ul style=\"text-align: left;\"><li>Double/triple buffering: Can improve the frame rate to the maximum frame rate of the encoder(currently it is 40 fps).</li><li>Using two encoder instead of one: Now as every alternate frame is being dropped, another encoder can be used to process these frames. This way we can get fully 60Hz frame rate. But there are issuses:</li><ul><li>&nbsp;Already the encoder is taking up almost half of the BRAMs available. So there might not be enough space for adding another encoder or if it is possible to add another encoder, there might not be enough space for other features which are going to be added.</li><li>As two encoded frames will be produced simultaneously, an way to send these to host via fx2 has to be designed which in turn will cost more memory.</li></ul><li>(Suggested by shenki)Removing DDR image buffer and storing frames directly into the line buffer: I am not sure if it is possible. Wil have to check.</li><li>Subsampling: Currently the encoder takes in RGB888 and converts into YCrCb and then subsamples it at 4:2:2. This can be changed into 4:2:0. This can reduce encoding time and might help us with the bandwidth issues.&nbsp;</li></ul></div></div></div><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://ajitmathewgsoc.blogspot.com/\">TimVideo GSoC 2014: MJPEG Optimisation</a></i>\n  </span>\n</div>\n"}