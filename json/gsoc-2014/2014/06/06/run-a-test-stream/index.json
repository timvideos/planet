{"title":"Run a Test Stream","created_at":"2014-06-06 00:00:00 UTC","author":"Amanpreet (Porting Flumotion)","content":"<p>An issue that has been troubling me for a while is that the ‘pspec’ parameter in the callback was set to None.</p>\n\n<div class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s\">&quot;/home/aps/workspace/gsoc/flumotion-orig/flumotion/common/gstreamer.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">55</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">verbose_deep_notify_cb</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">orig</span><span class=\"o\">.</span><span class=\"n\">get_property</span><span class=\"p\">(</span><span class=\"n\">pspec</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s\">&#39;NoneType&#39;</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s\">&#39;name&#39;</span></code></pre></div>\n\n<p>This was due to the change in working of “deep-notify” signal of GObject library. After a lot of research and bug hunting, I figured out that we need to connect the callback to a more specific notification signal. So, I did change in this <a href=\"https://github.com/aps-sids/flumotion-orig/commit/29f59d93b0666916374cec0e903f3b0ae4088ac5\">commit</a> and it works as expected.</p>\n\n<p>Now, a simple stream with only the Videotest producer runs perfectly fine. You can take a look at output from <a href=\"http://paste.ubuntu.com/7602897/\">Manager</a> and <a href=\"http://paste.ubuntu.com/7602905/\">Worker</a> and a <a href=\"http://a.disquscdn.com/uploads/mediaembed/images/1064/5842/original.jpg\">screenshot</a> as well. But don’t take my word for it, go ahead and run the stream yourself. Here are the steps (for Ubuntu 12.04) to do that:</p>\n\n<div class=\"highlight\"><pre><code class=\"language-bash\" data-lang=\"bash\"><span class=\"c\"># Getting and compiling the latest code</span>\n\n<span class=\"nv\">$ </span>sudo add-apt-repository ppa:gstreamer-developers/ppa -y\n<span class=\"nv\">$ </span>sudo apt-get update -qq\n<span class=\"nv\">$ </span>sudo apt-get install -qq subversion autopoint python-gst0.10 gstreamer0.10* python-gi python3-gi python-gobject-dev gstreamer1.0* gir1.2-gstreamer-1.0 gir1.2-gst-plugins-base-1.0 libglib2.0-dev gir1.2-glib-2.0 libgirepository1.0-dev libglib2.0-0 gir1.2-gtk-3 libxml-parser-perl python-twisted python-gtk2 python-glade2 python-kiwi pkg-config libglib2.0-dev liborc-0.4-dev bison flex\n<span class=\"nv\">$ </span>sudo pip install <span class=\"nv\">icalendar</span><span class=\"o\">==</span>2.2 pyparsing python-dateutil\n<span class=\"nv\">$ </span>wget https://launchpadlibrarian.net/170386464/gst-python1.0_1.2.0.orig.tar.gz\n<span class=\"nv\">$ </span>tar xvzf gst-python1.0_1.2.0.orig.tar.gz\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>gst-python-1.2.0/\n<span class=\"nv\">$ </span>./configure\n<span class=\"nv\">$ </span>make\n<span class=\"nv\">$ </span>sudo make install\n<span class=\"nv\">$ </span><span class=\"nb\">cd</span> ..\n<span class=\"nv\">$ </span>git clone https://github.com/aps-sids/flumotion-orig.git\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>flumotion-orig\n<span class=\"nv\">$ </span>git checkout porting-to-gst1.0\n<span class=\"nv\">$ </span>./autogen.sh\n<span class=\"nv\">$ </span>make\n\n<span class=\"c\"># To run the tests</span>\n\n<span class=\"nv\">$ </span>./run_tests.sh\n\n<span class=\"c\"># Creating the test stream</span>\n\n<span class=\"c\"># in terminal 1</span>\n<span class=\"nv\">$ </span>./env bash\n<span class=\"nv\">$ </span>flumotion-manager -v -T tcp test_config.xml\n\n<span class=\"c\"># in terminal 2</span>\n<span class=\"nv\">$ </span>./env bash\n<span class=\"nv\">$ </span>flumotion-worker -v -T tcp -u user -p <span class=\"nb\">test</span>\n\n<span class=\"c\"># in terminal 3 (you need a working flumotion installation for this)</span>\n<span class=\"nv\">$ </span>flumotion-admin -v</code></pre></div><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://aps-sids.github.io/porting-flumotion\">Porting Flumotion - GSoC '14 Progress Blog</a></i>\n  </span>\n</div>\n"}