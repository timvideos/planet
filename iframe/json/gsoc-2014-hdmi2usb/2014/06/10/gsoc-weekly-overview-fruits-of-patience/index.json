{"title":"[GSoC Weekly Overview]: Fruits of patience!","created_at":"2014-06-10 18:00:00 UTC","author":"Rohit (VGA Extension)","content":"<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"><div dir=\"ltr\" id=\"docs-internal-guid-129d4137-87d5-2ab8-590e-07bb4eb7ca6d\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">In short, this week was *boring* and it was only in the end that I got some much needed exciting work to do. Why boring? Because, reading datasheets is an extremely boring (yet extremely necessary) thing to do!</span></div><br /><h2 dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"background-color: transparent; color: black; font-family: 'Trebuchet MS'; font-size: 17px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;\">Reading datasheet</span></h2><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">So, most of the week was spent reading datasheet, starting with understanding the ‚Äú</span><a href=\"http://dreamsxtrinsic.blogspot.in/2014/06/gsoc-daily-log-back-to-datasheet.html\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">Theory of Operation</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">‚Äù of AD9984A IC. After that, It was time to read the Register Documentation (</span><a href=\"http://dreamsxtrinsic.blogspot.in/2014/06/gsoc-daily-log-more-reading-awareness.html\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">this</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\"> &amp; </span><a href=\"http://dreamsxtrinsic.blogspot.in/2014/06/gsoc-daily-log-more-reading-awareness.html\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">this</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">) of the AD9984A IC. One thing of importance was initialization procedure. Read the initialization procedure of a similar IC TVP7002 from TI. Now, After all this reading and reading, I was beginning to forget all I had read (bah), so I thought that I better make a spreadsheet to aggregate all the register documentation I had read. So was born </span><a href=\"https://docs.google.com/spreadsheets/d/1GH8NDtB8ceGhJEVZQujcXdxDPSw_wLqhg_3s436kkSs/edit?usp=sharing\" style=\"text-decoration: none;\"><span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: underline; vertical-align: baseline;\">this sheet</span></a><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">. This part consumed most of the time, since to get the IC working, one has to do correct register settings and for that one has to read the datasheet...boring, but it had to be done!</span></div><br /><h2 dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"background-color: transparent; color: black; font-family: 'Trebuchet MS'; font-size: 17px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;\">A Short!</span></h2><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">During my visual inspection of the IC, I noticed a short between 2 pins of AD9984A IC, which had gone unnoticed until then. It could have been nuisance &nbsp;because the short was between the VD pin (1.8V) and one analog input pin, which was coupled through a capacitor and then through a 75ùõ∫ resistor to ground. Not serious, nevertheless may be nuisance later. I removed it using a desoldering wick.</span></div><br /><h2 dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"background-color: transparent; color: black; font-family: 'Trebuchet MS'; font-size: 17px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;\">First HDL codes and results:</span></h2><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">After the datasheet reading part comes the exciting part of actually trying all the learning, which I was dying for! I wrote a test code in python for I2C initialization using the register and corresponding values in my quick cheatsheet linked above. Next job was to write a test VHDL code checking whether the chip is functioning. The easiest way is to see whether there are signals on any of SYNC lines (HSYNC/VSYNC/SOGOUT) or check if the pixel clock is correct. And, among them, the easiest is detecting VSYNC. There are two main reasons that I decided for testing for VSYNC first:</span></div><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">First, since VSYNC are standard 60Hz (mostly) signal, one just has to write a mod-60 counter. The output will flip every second. Also, it tells that the AD9984A IC is correctly detecting a frame. So, I connected the output to LED array onboard Atlys.</span></div><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">I used my standard custom generated 1024x768 @60Hz VGA signal from another FPGA to test the setup.</span></div><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">On powering up everything, and running the I2C initialization, the onboard LEDs start counting up every second, indicating successful detection of VSYNC pulses! A major milestone!</span></div><br /><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">So, in short this week started off boring work and ended with an exciting result! Fruits of Patience! :D</span></div><br /><h2 dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 10pt;\"><span style=\"background-color: transparent; color: black; font-family: 'Trebuchet MS'; font-size: 17px; font-style: normal; font-variant: normal; font-weight: bold; text-decoration: none; vertical-align: baseline;\">Upcoming Week:</span></h2><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">Everything is going as per plan as of now. A minor task would be testing for correct HSYNC and Pixel Clock. But, The major task would be writing code for capturing the pixel data correctly and test it. I‚Äôve two plans for testing as of now. Will need discussions with my mentor on that.</span></div><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">One way would be to test the capturing by outputting it to HDMI using the available dvi_encoder codes. I‚Äôd need more research for this plan.</span></div><div dir=\"ltr\" style=\"line-height: 1.15; margin-bottom: 0pt; margin-top: 0pt;\"><span style=\"background-color: transparent; color: black; font-family: Arial; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;\">Second would be to directly integrate the code to the HDMI2USB and test it the output on PC using the UVC USB. This plan, if successful would advance the coding time by quite a magnitude. But, it is also full of risks since, it would be unclear if the capture code is incorrect or the module integration is incorrect. More discussion needed on this.</span></div></div><div class=\"author\">\n  <span>\n    <i>Originally posted on <a href=\"http://dreamsxtrinsic.blogspot.com/\">Dreams eXtrinsic</a></i>\n  </span>\n</div>\n"}